OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:26:22.882902+02:00' ],		#prior : OmReference [ 'Pharo.cyp0aulk52b0dt1zj1lcv6zcb', '7' ],		#self : OmReference [ '1' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Operator',				#traitCompositionSource : '{}',				#definitionSource : 'Operator subclass: #Binary\r\tinstanceVariableNames: \'left right\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #Binary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Binary,						#isMetaSide : false					},					#name : #left,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Binary,						#isMetaSide : false					},					#name : #right,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Binary class\r\tinstanceVariableNames: \'\''				},				#name : #'Binary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Binary,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessors	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:26:35.903233+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #left,			#protocol : #accessors,			#sourceCode : 'left\r\t^left',			#stamp : 'pm 9/30/2018 08:26',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:27:18.197224+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'left:',			#protocol : #accessors,			#sourceCode : 'left: replacement\r\tleft:=replacement.\r\t^left',			#stamp : 'pm 9/30/2018 08:27',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:27:29.932847+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'right:',			#protocol : #accessors,			#sourceCode : 'right: replacement\r\tright:=replacement.\r\t^right',			#stamp : 'pm 9/30/2018 08:27',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:27:35.789049+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #right,			#protocol : #accessors,			#sourceCode : 'right\r\t^right',			#stamp : 'pm 9/30/2018 08:27',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:28:01.956473+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Operator',				#traitCompositionSource : '{}',				#definitionSource : 'Operator subclass: #Unary\r\tinstanceVariableNames: \'operand\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #Unary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Unary,						#isMetaSide : false					},					#name : #operand,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Unary class\r\tinstanceVariableNames: \'\''				},				#name : #'Unary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Unary,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessors	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:28:23.572103+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Unary,				#isMetaSide : false			},			#name : #'operand:',			#protocol : #accessors,			#sourceCode : 'operand: replacement\r\toperand:=replacement.\r\t^operand',			#stamp : 'pm 9/30/2018 08:28',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:28:28.709828+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Unary,				#isMetaSide : false			},			#name : #operand,			#protocol : #accessors,			#sourceCode : 'operand\r\t^operand',			#stamp : 'pm 9/30/2018 08:28',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:31:50.228839+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Prop\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #Prop,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Prop class\r\tinstanceVariableNames: \'\''				},				#name : #'Prop class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Prop,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #matching	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:33:31.348282+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchParternWith:',			#protocol : #matching,			#sourceCode : 'matchParternWith: prop\r\t^SubclassResponsibility.',			#stamp : 'pm 9/30/2018 08:33',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T08:35:12.592005+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Atome',				#traitCompositionSource : '{}',				#definitionSource : 'Atome subclass: #Constant\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #Constant,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Constant class\r\tinstanceVariableNames: \'symb\''				},				#name : #'Constant class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Constant class',							#isMetaSide : true						},						#name : #symb,						#parent : @12					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Constant,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #matching	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:08:30.222307+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchParternWith:',			#protocol : #matching,			#sourceCode : 'matchParternWith: prop\r\t^SubclassResponsibility.',			#stamp : 'pm 9/30/2018 08:33',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchParternWith:',			#protocol : #matching,			#sourceCode : 'matchParternWith: prop\r\t"Match self and prop. to end a branch of the pattern\r\tuse a random variable\r\tvar == whatever\r\tanythingElse == anythingElse only :  !n => T == !(A /\\ B)=> T for example\r\t"\r\t^SubclassResponsibility.',			#stamp : 'pm 9/30/2018 09:08',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:09:03.701415+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"Match self and prop. to end a branch of the pattern\r\tuse a random variable\r\tvar == whatever\r\tanythingElse == anythingElse only :  !n => T == !(A /\\ B)=> T for example\r\t"\r\t^SubclassResponsibility.',			#stamp : 'pm 9/30/2018 09:09',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:09:06.567786+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchParternWith:',			#protocol : #matching,			#sourceCode : 'matchParternWith: prop\r\t"Match self and prop. to end a branch of the pattern\r\tuse a random variable\r\tvar == whatever\r\tanythingElse == anythingElse only :  !n => T == !(A /\\ B)=> T for example\r\t"\r\t^SubclassResponsibility.',			#stamp : 'pm 9/30/2018 09:08',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:11:53.893276+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Constant,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."',			#stamp : 'pm 9/30/2018 09:11',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:12:02.533107+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Operator',				#traitCompositionSource : '{}',				#definitionSource : 'Operator subclass: #Binary\r\tinstanceVariableNames: \'left right\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #Binary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Binary,						#isMetaSide : false					},					#name : #left,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Binary,						#isMetaSide : false					},					#name : #right,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Binary class\r\tinstanceVariableNames: \'\''				},				#name : #'Binary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Binary,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #Matching	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:12:18.224186+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."',			#stamp : 'pm 9/30/2018 09:12',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:12:38.568218+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Operator',				#traitCompositionSource : '{}',				#definitionSource : 'Operator subclass: #Unary\r\tinstanceVariableNames: \'operand\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #Unary,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Unary,						#isMetaSide : false					},					#name : #operand,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Unary class\r\tinstanceVariableNames: \'\''				},				#name : #'Unary class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Unary,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #Matching	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:12:46.665402+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Unary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."',			#stamp : 'pm 9/30/2018 09:12',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:21:33.305467+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Constant,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."',			#stamp : 'pm 9/30/2018 09:11',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Constant,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."\r\t^true\r',			#stamp : 'pm 9/30/2018 09:21',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:23:55.065694+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Constant,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."\r\t^true\r',			#stamp : 'pm 9/30/2018 09:21',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:24:03.795539+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Atome',				#traitCompositionSource : '{}',				#definitionSource : 'Atome subclass: #Constant\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #Constant,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Constant class\r\tinstanceVariableNames: \'symb\''				},				#name : #'Constant class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Constant class',							#isMetaSide : true						},						#name : #symb,						#parent : @12					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Constant,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #matching	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:24:22.942134+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Constant',				#traitCompositionSource : '{}',				#definitionSource : 'Constant subclass: #False_Const\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #False_Const,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'False_Const class\r\tinstanceVariableNames: \'\''				},				#name : #'False_Const class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #False_Const,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #matching	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:25:27.849809+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #False_Const,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."\r\tprop isKindOf: False_Const',			#stamp : 'pm 9/30/2018 09:25',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:45:25.179057+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #False_Const,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."\r\tprop isKindOf: False_Const',			#stamp : 'pm 9/30/2018 09:25',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #False_Const,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."\r\t^prop isKindOf: False_Const',			#stamp : 'pm 9/30/2018 09:45',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:45:45.401164+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Constant',				#traitCompositionSource : '{}',				#definitionSource : 'Constant subclass: #True_Const\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #True_Const,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'True_Const class\r\tinstanceVariableNames: \'\''				},				#name : #'True_Const class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #True_Const,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #matching	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:48:29.448869+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #True_Const,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."\r\t^prop isKindOf: True_Const',			#stamp : 'pm 9/30/2018 09:48',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:49:00.993337+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Atome',				#traitCompositionSource : '{}',				#definitionSource : 'Atome subclass: #Var\r\tinstanceVariableNames: \'symb\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_Specification\''			},			#name : #Var,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Var,						#isMetaSide : false					},					#name : #symb,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Var class\r\tinstanceVariableNames: \'\''				},				#name : #'Var class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Var,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_Specification,			#package : #_Specification,			#sharedPools : OrderedCollection [ ]		},		#protocol : #matching	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T09:59:54.472104+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Var,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."\r\t^true',			#stamp : 'pm 9/30/2018 09:59',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T10:16:59.750677+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'compareSymbol:',			#protocol : #matching,			#sourceCode : 'compareSymbol: otherProp\r\t^(self getSymb = otherProp getSymb) ',			#stamp : 'pm 9/30/2018 10:16',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T10:28:16.262218+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Unary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."',			#stamp : 'pm 9/30/2018 09:12',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Unary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^operand matchPatternWith: (prop operand)].',			#stamp : 'pm 9/30/2018 10:28',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T10:30:23.804475+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."',			#stamp : 'pm 9/30/2018 09:12',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^left matchPatternWith: (prop operand)].',			#stamp : 'pm 9/30/2018 10:30',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T10:30:41.608319+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^left matchPatternWith: (prop operand)].',			#stamp : 'pm 9/30/2018 10:30',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^left matchPatternWith: (prop operand)].',			#stamp : 'pm 9/30/2018 10:30',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T10:38:33.370577+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^left matchPatternWith: (prop operand)].',			#stamp : 'pm 9/30/2018 10:30',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^left matchPatternWith: (prop operand)]\r\t\tifFalse:[^false].',			#stamp : 'pm 9/30/2018 10:38',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T10:39:17.278538+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Unary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^operand matchPatternWith: (prop operand)].',			#stamp : 'pm 9/30/2018 10:28',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Unary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #Matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^operand matchPatternWith: (prop operand)]\r\t\tifFalse:[^false].',			#stamp : 'pm 9/30/2018 10:39',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T10:57:53.297286+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[^left matchPatternWith: (prop operand)]\r\t\tifFalse:[^false].',			#stamp : 'pm 9/30/2018 10:38',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[\r\t\t\t^[left matchPatternWith: (prop left)]\r\t\t\t& [right matchParternWith: (prop right)]\r\t\t\t]\r\t\tifFalse:[^false].',			#stamp : 'pm 9/30/2018 10:57',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:02:25.972695+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #matchingUnitTest,			#protocol : #testing,			#sourceCode : 'matchingUnitTest',			#stamp : 'pm 9/30/2018 11:02',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:02:33.940669+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #propUnitTest,			#protocol : #testing,			#sourceCode : 'propUnitTest\r\tTranscript show: self prettyPrint; show: \'  \' ;show: self isClause; cr.',			#stamp : 'pm 9/30/2018 11:02',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:04:29.325966+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingProp,			#protocol : #testing,			#sourceCode : 'testingProp\r \t"everything is tested in those few lines"\r\t"Binary"\r\t| p l r|\r\t\r\tTranscript clear.\r\tTranscript show: \'Testing prop related stuff\';cr.\r\t\r\tTranscript show: \'testing every constructor in a simple way, and if they are clauses:\';cr.\r\t\r\tp:=And new: (Var new: \'a\') rightProp: (False_Const new).\r\tp unitTest.\r\r\tp:=Or new: (Var new: \'a\') rightProp: (False_Const new).\r\tp unitTest.\r\r\tp:=Equal new: (Var new: \'a\') rightProp: (True_Const new).\r\tp unitTest.\r\t\r\tp:=Imply new: (Var new: \'a\') rightProp: (True_Const new).\r\tp unitTest.\r\r\t"unary"\r\tp:=Not new: (Var new: \'a\').\r\tp unitTest.\r\t\r\tTranscript show: \'Bit more complicated stuff!\';cr.\r\t\r\tp:=Imply new: (Equal new: (Not new: (Var new: \'a\')) rightProp: (Var new: \'b\')) rightProp: (False_Const new).\r\tp unitTest.\r\t\r\tTranscript show: \'Testing Comparisons on Vars:\'; cr.\r\t\r\tl:=Var new: \'a\'.\r\tr:=Var new: \'b\'.\r\tTranscript show: \'is var a = b ? \';\r\t\t\tshow: (l isSameVar: r); cr.\r\r\tr:=Var new: \'a\'.\r\tTranscript show: \'is var a = a ? \';\r\t\tshow: (l isSameVar: r); cr.\r\t\r\tTranscript show: \'Done with the testing, did it work? :3\' ; cr; cr.',			#stamp : 'pm 9/29/2018 10:07',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingProp,			#protocol : #testing,			#sourceCode : 'testingProp\r \t"everything is tested in those few lines"\r\t"Binary"\r\t| p l r|\r\t\r\tTranscript clear.\r\tTranscript show: \'Testing prop related stuff\';cr.\r\t\r\tTranscript show: \'testing every constructor in a simple way, and if they are clauses:\';cr.\r\t\r\tp:=And new: (Var new: \'a\') rightProp: (False_Const new).\r\tp propUnitTest.\r\r\tp:=Or new: (Var new: \'a\') rightProp: (False_Const new).\r\tp propUnitTest.\r\r\tp:=Equal new: (Var new: \'a\') rightProp: (True_Const new).\r\tp propUnitTest.\r\t\r\tp:=Imply new: (Var new: \'a\') rightProp: (True_Const new).\r\tp propUnitTest.\r\r\t"unary"\r\tp:=Not new: (Var new: \'a\').\r\tp propUnitTest.\r\t\r\tTranscript show: \'Bit more complicated stuff!\';cr.\r\t\r\tp:=Imply new: (Equal new: (Not new: (Var new: \'a\')) rightProp: (Var new: \'b\')) rightProp: (False_Const new).\r\tp propUnitTest.\r\t\r\tTranscript show: \'Testing Comparisons on Vars:\'; cr.\r\t\r\tl:=Var new: \'a\'.\r\tr:=Var new: \'b\'.\r\tTranscript show: \'is var a = b ? \';\r\t\t\tshow: (l isSameVar: r); cr.\r\r\tr:=Var new: \'a\'.\r\tTranscript show: \'is var a = a ? \';\r\t\tshow: (l isSameVar: r); cr.\r\t\r\tTranscript show: \'Done with the testing, did it work? :3\' ; cr; cr.',			#stamp : 'pm 9/30/2018 11:04',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:06:07.10752+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #unitTest,			#protocol : #testing,			#sourceCode : 'unitTest\r\tTranscript show: self prettyPrint; show: \'  \' ;show: self isClause; cr.',			#stamp : 'pm 9/29/2018 09:08',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:28:49.467534+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchingUnitTest:',			#protocol : #testing,			#sourceCode : 'matchingUnitTest: prop\r\t"self will be considered as a pattern"\r\tTranscript show: \'prop : \' ; \r\t\tshow: (prop prettyPrint);\r\t\tcr;\r\t\tshow: \'pattern : \';\r\t\tshow: (self prettyPrint);\r\t\tcr.\r\t\t(self matchPatternWith: prop)\r\t\t\tifTrue:[ Transcript show: \'matched!\';cr.]\r\t\t\tifFalse:[ Transcript show: \'didn\'\'t match\';cr]\r\t',			#stamp : 'pm 9/30/2018 11:28',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:34:43.596347+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #matchingUnitTest,			#protocol : #testing,			#sourceCode : 'matchingUnitTest',			#stamp : 'pm 9/30/2018 11:02',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:52:26.588507+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pat prop|\r\t\r\tpat:= Imply new: (True_Const new) rightProp: (Var a).\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpat matchPatternWith: prop.',			#stamp : 'pm 9/30/2018 11:52',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:55:13.818239+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pat prop|\r\t\r\tpat:= Imply new: (True_Const new) rightProp: (Var a).\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpat matchPatternWith: prop.',			#stamp : 'pm 9/30/2018 11:52',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pat prop|\r\t\r\tpat:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpat matchPatternWith: prop.',			#stamp : 'pm 9/30/2018 11:55',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T11:59:33.252978+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[\r\t\t\t^[left matchPatternWith: (prop left)]\r\t\t\t& [right matchParternWith: (prop right)]\r\t\t\t]\r\t\tifFalse:[^false].',			#stamp : 'pm 9/30/2018 10:57',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[\r\t\t\t^(left matchPatternWith: (prop left))\r\t\t\t& (right matchParternWith: (prop right))\r\t\t\t]\r\t\tifFalse:[^false].',			#stamp : 'pm 9/30/2018 11:59',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:00:21.160805+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[\r\t\t\t^(left matchPatternWith: (prop left))\r\t\t\t& (right matchParternWith: (prop right))\r\t\t\t]\r\t\tifFalse:[^false].',			#stamp : 'pm 9/30/2018 11:59',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t(self compareSymbol: prop)\r\t\tifTrue:[\r\t\t\t^(left matchPatternWith: (prop left))\r\t\t\t& (right matchPatternWith: (prop right))\r\t\t\t]\r\t\tifFalse:[^false].',			#stamp : 'pm 9/30/2018 12:00',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:06:52.903628+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pat prop|\r\t\r\tpat:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpat matchPatternWith: prop.',			#stamp : 'pm 9/30/2018 11:55',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop',			#stamp : 'pm 9/30/2018 12:06',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:07:04.793036+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop',			#stamp : 'pm 9/30/2018 12:06',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:07',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:10:20.043579+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:07',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\r\tTranscript clear.\r\tTranscript show: \'Testing matching related stuff\';cr.\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:10',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:11:10.765406+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\r\tTranscript clear.\r\tTranscript show: \'Testing matching related stuff\';cr.\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:10',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\r\tTranscript clear.\r\tTranscript show: \'Testing matching related stuff\';cr.\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:11',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:13:43.574074+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\r\tTranscript clear.\r\tTranscript show: \'Testing matching related stuff\';cr.\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:11',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\r\tTranscript clear.\r\tTranscript show: \'Testing matching related stuff\'.\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:13',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:14:07.601399+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchingUnitTest:',			#protocol : #testing,			#sourceCode : 'matchingUnitTest: prop\r\t"self will be considered as a pattern"\r\tTranscript show: \'prop : \' ; \r\t\tshow: (prop prettyPrint);\r\t\tcr;\r\t\tshow: \'pattern : \';\r\t\tshow: (self prettyPrint);\r\t\tcr.\r\t\t(self matchPatternWith: prop)\r\t\t\tifTrue:[ Transcript show: \'matched!\';cr.]\r\t\t\tifFalse:[ Transcript show: \'didn\'\'t match\';cr]\r\t',			#stamp : 'pm 9/30/2018 11:28',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchingUnitTest:',			#protocol : #testing,			#sourceCode : 'matchingUnitTest: prop\r\t"self will be considered as a pattern"\r\tTranscript cr;\r\t\tshow: \'prop : \' ; \r\t\tshow: (prop prettyPrint);\r\t\tcr;\r\t\tshow: \'pattern : \';\r\t\tshow: (self prettyPrint);\r\t\tcr.\r\t\t(self matchPatternWith: prop)\r\t\t\tifTrue:[ Transcript show: \'matched!\';cr.]\r\t\t\tifFalse:[ Transcript show: \'didn\'\'t match\';cr]\r\t',			#stamp : 'pm 9/30/2018 12:14',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:15:29.442812+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t^((left isKindOf: Atome) ifTrue:[\' \'] ifFalse:[\' (\']) ,\r\t\tleft prettyPrint,\r\t\t((left isKindOf: Atome) ifTrue:[\' \'] ifFalse:[\') \']) ,\r\r\t\tself getSymb,\r\r\t\t((right isKindOf: Atome) ifTrue:[\' \'] ifFalse:[\' (\']) ,\r\t\tright prettyPrint,\r\t\t((left isKindOf: Atome) ifTrue:[\' \'] ifFalse:[\') \']).\r',			#stamp : 'pm 9/29/2018 10:07',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t^((left isKindOf: Atome) ifTrue:[\' \'] ifFalse:[\' (\']) ,\r\t\tleft prettyPrint,\r\t\t((left isKindOf: Atome) ifTrue:[\' \'] ifFalse:[\') \']) ,\r\r\t\tself getSymb,\r\r\t\t((right isKindOf: Atome) ifTrue:[\' \'] ifFalse:[\' (\']) ,\r\t\tright prettyPrint,\r\t\t((right isKindOf: Atome) ifTrue:[\' \'] ifFalse:[\') \']).\r',			#stamp : 'pm 9/30/2018 12:15',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:34:02.673418+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\r\tTranscript clear.\r\tTranscript show: \'Testing matching related stuff\'.\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:13',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Prop class',				#isMetaSide : true			},			#name : #testingMatch,			#protocol : #testing,			#sourceCode : 'testingMatch\r\t|pattern prop|\r\r\tTranscript clear.\r\tTranscript show: \'Testing matching related stuff\'.\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (Var new: \'a\').\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.\r\t\r\tpattern:= Imply new: (True_Const new) rightProp: (False_Const  new).\r\tprop:= Imply new: (True_Const new) rightProp: (Not new:(Var new: \'a\')).\r\tpattern matchingUnitTest: prop.',			#stamp : 'pm 9/30/2018 12:34',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-30T12:34:29.487718+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchingUnitTest:',			#protocol : #testing,			#sourceCode : 'matchingUnitTest: prop\r\t"self will be considered as a pattern"\r\tTranscript cr;\r\t\tshow: \'prop : \' ; \r\t\tshow: (prop prettyPrint);\r\t\tcr;\r\t\tshow: \'pattern : \';\r\t\tshow: (self prettyPrint);\r\t\tcr.\r\t\t(self matchPatternWith: prop)\r\t\t\tifTrue:[ Transcript show: \'matched!\';cr.]\r\t\t\tifFalse:[ Transcript show: \'didn\'\'t match\';cr]\r\t',			#stamp : 'pm 9/30/2018 12:14',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'matchingUnitTest:',			#protocol : #testing,			#sourceCode : 'matchingUnitTest: prop\r\t"self will be considered as a pattern"\r\tTranscript cr;\r\t\tshow: \'prop : \' ; \r\t\tshow: (prop prettyPrint);\r\t\tcr;\r\t\tshow: \'pattern : \';\r\t\tshow: (self prettyPrint);\r\t\tcr.\r\t\t(self matchPatternWith: prop)\r\t\t\tifTrue:[ Transcript show: \'matched!\';cr.]\r\t\t\tifFalse:[ Transcript show: \'didn\'\'t match!\';cr]\r\t',			#stamp : 'pm 9/30/2018 12:34',			#package : #_Specification		}	}}