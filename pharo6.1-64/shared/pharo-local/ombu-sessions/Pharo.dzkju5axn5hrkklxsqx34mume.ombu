OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:08:30.947174+02:00' ],		#prior : OmReference [ 'Pharo.13pk9q43zm5enguy1csigb3lc', '142' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #NotVar,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t^\'!\',(self getSymb).',			#stamp : 'pm 10/3/2018 13:11',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #NotVar,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t^(Not getSymb),(self getSymb).',			#stamp : 'pm 10/3/2018 15:08',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:23:19.000409+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #NotVar,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t^(Not getSymb),(self getSymb).',			#stamp : 'pm 10/3/2018 15:08',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #NotVar,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t^(Not Symb),(self getSymb).',			#stamp : 'pm 10/3/2018 15:23',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:23:22.870718+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #NotVar,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t^(Not Symb),(self getSymb).',			#stamp : 'pm 10/3/2018 15:23',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #NotVar,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t^(Not symb),(self getSymb).',			#stamp : 'pm 10/3/2018 15:23',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:28:08.525736+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[self add:(NotVar new:(OrProp operand))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/2/2018 19:08',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[self add:(NotVar new:((OrProp operand) getSymb))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/3/2018 15:28',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:33:59.796619+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[self add:(NotVar new:((OrProp operand) getSymb))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/3/2018 15:28',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[Transcript show:(OrProp operand) getSymb.\r\t\t\t\t\t\tself add:(NotVar new:((OrProp operand) getSymb))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/3/2018 15:33',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:36:38.37733+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[Transcript show:(OrProp operand) getSymb.\r\t\t\t\t\t\tself add:(NotVar new:((OrProp operand) getSymb))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/3/2018 15:33',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[Transcript show:(OrProp operand) getSymb ;cr.\r\t\t\t\t\t\tself add:(NotVar new:((OrProp operand) getSymb))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/3/2018 15:36',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:37:30.056237+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[Transcript show:(OrProp operand) getSymb ;cr.\r\t\t\t\t\t\tself add:(NotVar new:((OrProp operand) getSymb))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/3/2018 15:36',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:["Transcript show:(OrProp operand) getSymb ;cr."\r\t\t\t\t\t\tself add:(NotVar new:((OrProp operand) getSymb))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/3/2018 15:37',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:38:15.669995+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #initialization,			#sourceCode : 'prettyPrint\r\t|t|\r\tt:=\'{\'.\r\t\tclauses do: [  :each | t:=t,\'{\',(each prettyPrint),\'},\'. ].\r\tt:=t,\'}\'.\r\t^t.',			#stamp : 'pm 10/3/2018 13:07',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #initialization,			#sourceCode : 'prettyPrint\r\t|t|\r\tt:=\'{\'.\r\t\tclauses do: [  :each | t:=t,(each prettyPrint). ].\r\tt:=t,\'}\'.\r\t^t.',			#stamp : 'pm 10/3/2018 15:38',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-03T15:38:36.278586+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #initialization,			#sourceCode : 'prettyPrint\r\t|t|\r\tt:=\'{\'.\r\t\tclauses do: [  :each | t:=t,(each prettyPrint). ].\r\tt:=t,\'}\'.\r\t^t.',			#stamp : 'pm 10/3/2018 15:38',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #initialization,			#sourceCode : 'prettyPrint\r\t|t|\r\tt:=\'{\'.\r\t\tclauses do: [  :each | t:=t,(each prettyPrint),\',\'. ].\r\tt:=t,\'}\'.\r\t^t.',			#stamp : 'pm 10/3/2018 15:38',			#package : #_Specification		}	}}