OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T17:47:18.723949+02:00' ],		#prior : OmReference [ 'Pharo.701thbyomjqzqfbuzj4lmf2kp', '91' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Herbrandise:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar\r\t^SubclassResponsibility.',			#stamp : 'pm 10/6/2018 17:47',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T17:47:22.472575+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #Herbrandise,			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise\r\t^SubclassResponsibility.',			#stamp : 'pm 10/5/2018 23:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T17:47:43.953083+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Skolemise:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemise: setOfLinkedVar\r\t^SubclassResponsibility.',			#stamp : 'pm 10/6/2018 17:47',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T17:47:48.283283+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #Skolemise,			#protocol : #Skoleminsation,			#sourceCode : 'Skolemise\r\t^SubclassResponsibility.',			#stamp : 'pm 10/5/2018 23:17',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T17:54:13.324171+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #HerbranSkolemDocu,			#protocol : #Skoleminsation,			#sourceCode : 'HerbranSkolemDocu\r\t^Error new:\'documentation of Skolemnisation\'.',			#stamp : 'pm 10/6/2018 17:54',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T18:09:08.298455+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #HerbranSkolemDocu,			#protocol : #Skoleminsation,			#sourceCode : 'HerbranSkolemDocu\r\t^Error new:\'documentation of Skolemnisation\'.',			#stamp : 'pm 10/6/2018 17:55',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #HerbranSkolemDocu,			#protocol : #Skoleminsation,			#sourceCode : 'HerbranSkolemDocu\r\t^Error new:\'documentation of Skolemnisation\'.\r\t"return that prop skolemnised"',			#stamp : 'pm 10/6/2018 18:09',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:22:58.940397+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Term\r\tinstanceVariableNames: \'symb\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Term,						#isMetaSide : false					},					#name : #symb,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:23:13.077094+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Const_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Const_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Const_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Const_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Const_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:23:20.542923+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Var_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Var_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Var_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Var_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Var_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:23:34.513478+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Func_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Func_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Func_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Func_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Func_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:24:27.693734+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #getSymb,			#protocol : #'as yet unclassified',			#sourceCode : 'getSymb\r\t^symb',			#stamp : 'pm 10/6/2018 19:24',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:24:27.783618+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #getSymb,			#protocol : #'as yet unclassified',			#sourceCode : 'getSymb\r\t^symb',			#stamp : 'pm 10/6/2018 19:24',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #getSymb,			#protocol : #accessing,			#sourceCode : 'getSymb\r\t^symb',			#stamp : 'pm 10/6/2018 19:24',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:25:33.132177+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #accessing,			#sourceCode : 'PrettyPrint\r\t^(self getSymb)',			#stamp : 'pm 10/6/2018 19:25',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:26:47.343888+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #'as yet unclassified',			#sourceCode : 'PrettyPrint\r\t',			#stamp : 'pm 10/6/2018 19:26',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:26:47.41819+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #'as yet unclassified',			#sourceCode : 'PrettyPrint\r\t',			#stamp : 'pm 10/6/2018 19:26',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #accessing,			#sourceCode : 'PrettyPrint\r\t',			#stamp : 'pm 10/6/2018 19:26',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:28:04.206204+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #accessing,			#sourceCode : 'PrettyPrint\r\t',			#stamp : 'pm 10/6/2018 19:26',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #accessing,			#sourceCode : 'PrettyPrint\r\t|r|\r\tr:=\t(self getSymb),\'(\'.\r\t',			#stamp : 'pm 10/6/2018 19:28',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:28:24.753672+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Func_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Func_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Func_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Func_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Func_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Func_Term\r\tinstanceVariableNames: \'terms\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Func_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Func_Term,						#isMetaSide : false					},					#name : #terms,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Func_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Func_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Func_Term,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:28:39.822057+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #terms,			#protocol : #'as yet unclassified',			#sourceCode : 'terms\r\t^terms',			#stamp : 'pm 10/6/2018 19:28',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:28:39.898144+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #terms,			#protocol : #'as yet unclassified',			#sourceCode : 'terms\r\t^terms',			#stamp : 'pm 10/6/2018 19:28',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #terms,			#protocol : #accessing,			#sourceCode : 'terms\r\t^terms',			#stamp : 'pm 10/6/2018 19:28',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:29:52.051681+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #accessing,			#sourceCode : 'PrettyPrint\r\t|r|\r\tr:=\t(self getSymb),\'(\'.\r\t',			#stamp : 'pm 10/6/2018 19:28',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #accessing,			#sourceCode : 'PrettyPrint\r\t|r|\r\tr:=\t(self getSymb),\'(\'.\r\tterms do:[:each|r:=r,each,\',\'.].\r\tr:=r,\')\'.\r\t^r\r\t',			#stamp : 'pm 10/6/2018 19:29',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:29:53.394807+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #accessing,			#sourceCode : 'PrettyPrint\r\t|r|\r\tr:=\t(self getSymb),\'(\'.\r\tterms do:[:each|r:=r,each,\',\'.].\r\tr:=r,\')\'.\r\t^r\r\t',			#stamp : 'pm 10/6/2018 19:29',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #PrettyPrint,			#protocol : #accessing,			#sourceCode : 'PrettyPrint\r\t|r|\r\tr:=\t(self getSymb),\'(\'.\r\tterms do:[:each|r:=r,each,\',\'.].\r\tr:=r,\')\'.\r\t^r.\r\t',			#stamp : 'pm 10/6/2018 19:29',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:32:13.99108+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'initialize:Variable:',			#protocol : #initialization,			#sourceCode : 'initialize: symbl Variable: aVar\r\tsymb:=symbl.\r\tvars:=LinkedList new.\r\tvars add:aVar.',			#stamp : 'pm 10/5/2018 19:42',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'initialize:Variable:',			#protocol : #initialization,			#sourceCode : 'initialize: symbl Variable: aTerm\r\tsymb:=symbl.\r\tvars:=LinkedList new.\r\tvars add:aTerm.',			#stamp : 'pm 10/6/2018 19:32',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-06T19:32:46.044229+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'initialize:Variables:',			#protocol : #initialization,			#sourceCode : 'initialize: symbl Variables: aLinkedList\r\tsymb:=symbl.\r\tvars:=aLinkedList.',			#stamp : 'pm 10/5/2018 20:01',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'initialize:Variables:',			#protocol : #initialization,			#sourceCode : 'initialize: symbl Variables: aLinkedListOfTerm\r\tsymb:=symbl.\r\tvars:=aLinkedListOfTerm.',			#stamp : 'pm 10/6/2018 19:32',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:13:10.624607+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#Var_Term ))'	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ],		#time : DateAndTime [ '2018-10-07T10:13:10.810197+02:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Var_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #_resolution_1erOrdre'			},			#name : #Var_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Var_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteVar_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteVar_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:13:42.433178+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Free_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Free_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Free_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Free_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Free_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:13:51.487212+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Linked_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Linked_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Linked_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Linked_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Linked_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:18:35.526157+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Const_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Const_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Const_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'Const_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Const_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Const_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Const_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Const_Term class\r\tinstanceVariableNames: \'factoryNum\''				},				#name : #'Const_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Const_Term class',							#isMetaSide : true						},						#name : #factoryNum,						#parent : @26					}				],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Const_Term,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:19:55.652267+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\tfactoryNum:=1.',			#stamp : 'pm 10/7/2018 10:19',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:19:55.800931+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\tfactoryNum:=1.',			#stamp : 'pm 10/7/2018 10:19',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tfactoryNum:=1.',			#stamp : 'pm 10/7/2018 10:19',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:20:17.506203+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #factoryNum,			#protocol : #initialization,			#sourceCode : 'factoryNum\r\t^factoryNum.',			#stamp : 'pm 10/7/2018 10:20',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:21:36.928138+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #getNum,			#protocol : #initialization,			#sourceCode : 'getNum\r\tfactoryNum:=factoryNum +1.\r\t^factoryNum ',			#stamp : 'pm 10/7/2018 10:21',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:21:44.262856+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #getNum,			#protocol : #initialization,			#sourceCode : 'getNum\r\tfactoryNum:=factoryNum +1.\r\t^factoryNum ',			#stamp : 'pm 10/7/2018 10:21',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #getNum,			#protocol : #initialization,			#sourceCode : 'getNum\r\tfactoryNum+=1.\r\t^factoryNum ',			#stamp : 'pm 10/7/2018 10:21',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:22:02.414039+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tfactoryNum:=1.',			#stamp : 'pm 10/7/2018 10:19',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tfactoryNum:=0.',			#stamp : 'pm 10/7/2018 10:22',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:23:33.960519+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #nextConst,			#protocol : #initialization,			#sourceCode : 'nextConst\r\t^\'c\',(self getNum).',			#stamp : 'pm 10/7/2018 10:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:24:06.912896+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #new,			#protocol : #initialization,			#sourceCode : 'new\r\t^self basicNew initialize.',			#stamp : 'pm 10/7/2018 10:24',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:24:38.204865+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Const_Term,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\tsymb:=(self class)getNum.',			#stamp : 'pm 10/7/2018 10:24',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:24:38.279774+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Const_Term,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\tsymb:=(self class)getNum.',			#stamp : 'pm 10/7/2018 10:24',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Const_Term,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsymb:=(self class)getNum.',			#stamp : 'pm 10/7/2018 10:24',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T10:24:46.333661+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Const_Term,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsymb:=(self class)getNum.',			#stamp : 'pm 10/7/2018 10:24',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Const_Term,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tsymb:=(self class) getNum.',			#stamp : 'pm 10/7/2018 10:24',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:09:03.923035+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Const_Term class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #initialization,			#sourceCode : 'new:Const_Value\r\t^self basicNew initialize:Const_Value.',			#stamp : 'pm 10/7/2018 11:09',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:09:33.751879+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Const_Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize:ConstValue\r\tsymb:=ConstValue.',			#stamp : 'pm 10/7/2018 11:09',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:23:53.47637+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Herbrandise:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar\r\t^SubclassResponsibility.',			#stamp : 'pm 10/6/2018 17:47',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Herbrandise:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar \r\t^SubclassResponsibility.',			#stamp : 'pm 10/7/2018 11:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:25:16.916502+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^SubclassResponsibility.',			#stamp : 'pm 10/7/2018 11:25',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:25:29.241165+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Skolemise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemise: setOfLinkedVar CorrespondingValue: aMap\r\t^SubclassResponsibility.',			#stamp : 'pm 10/7/2018 11:25',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:25:32.107216+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Skolemise:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemise: setOfLinkedVar\r\t^SubclassResponsibility.',			#stamp : 'pm 10/6/2018 17:47',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:25:34.923851+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Herbrandise:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar \r\t^SubclassResponsibility.',			#stamp : 'pm 10/7/2018 11:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:28:37.206804+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^And new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:28',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:28:37.291777+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^And new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:28',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^And new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:28',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:28:57.697895+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^And new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:28',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:28',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:31:42.039168+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^SubclassResponsibility.',			#stamp : 'pm 10/7/2018 11:31',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:31:48.106701+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #'Skolemise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemise: setOfLinkedVar CorrespondingValue: aMap\r\t^SubclassResponsibility.',			#stamp : 'pm 10/7/2018 11:25',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:31:55.878704+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Binary,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Skolemnise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Skolemnise: setOfLinkedVar CorrespondingValue: aMap).\r\t\t\t"Works for at least Or & And. Maybe Equal?"',			#stamp : 'pm 10/7/2018 11:31',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:32:54.944702+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imply,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:32',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:32:55.025166+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imply,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:32',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imply,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:32',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:33:50.189055+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imply,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:32',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imply,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Skolemnise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:33',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:34:36.987399+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imply,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) \r\t\t\trightProp: (self right Skolemnise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:34',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:34:46.568769+02:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Not,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) ',			#stamp : 'pm 10/7/2018 11:34',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:34:46.649876+02:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Not,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) ',			#stamp : 'pm 10/7/2018 11:34',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Not,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) ',			#stamp : 'pm 10/7/2018 11:34',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:35:26.175261+02:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Not,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) ',			#stamp : 'pm 10/7/2018 11:34',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Not,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:35',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:35:37.324278+02:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Not,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap).',			#stamp : 'pm 10/7/2018 11:35',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:36:00.186549+02:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) ',			#stamp : 'pm 10/7/2018 11:36',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T11:36:00.273512+02:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) ',			#stamp : 'pm 10/7/2018 11:36',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) ',			#stamp : 'pm 10/7/2018 11:36',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:01:19.204329+02:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t^(self class) new: (self left Herbrandise: setOfLinkedVar CorrespondingValue: aMap) ',			#stamp : 'pm 10/7/2018 11:36',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self left Skolemnise: setOfLinkedVar CorrespondingValue: aMap. ")"',			#stamp : 'pm 10/7/2018 12:01',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:01:22.489229+02:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self left Skolemnise: setOfLinkedVar CorrespondingValue: aMap. ")"',			#stamp : 'pm 10/7/2018 12:01',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self left Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".',			#stamp : 'pm 10/7/2018 12:01',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:01:35.002837+02:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self left Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".',			#stamp : 'pm 10/7/2018 12:01',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self left Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the forall in the formula\r\t"',			#stamp : 'pm 10/7/2018 12:01',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:14:56.134256+02:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'LinkedList',				#traitCompositionSource : '{}',				#definitionSource : 'LinkedList subclass: #MinimalOrderedSet\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #MinimalOrderedSet,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MinimalOrderedSet class\r\tinstanceVariableNames: \'\''				},				#name : #'MinimalOrderedSet class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MinimalOrderedSet,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:20:44.449206+02:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #'as yet unclassified',			#sourceCode : 'add: anObject \r\t',			#stamp : 'pm 10/7/2018 12:20',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:20:44.529982+02:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #'as yet unclassified',			#sourceCode : 'add: anObject \r\t',			#stamp : 'pm 10/7/2018 12:20',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: anObject \r\t',			#stamp : 'pm 10/7/2018 12:20',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:23:11.110562+02:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: anObject \r\t',			#stamp : 'pm 10/7/2018 12:20',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t]\r\tsuper add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:23:42.291635+02:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'addInASet:',			#protocol : #adding,			#sourceCode : 'addInASet: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t]\r\t self add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:23:46.949285+02:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t]\r\tsuper add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:23:50.666917+02:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'addInASet:',			#protocol : #adding,			#sourceCode : 'addInASet: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t]\r\t self add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:23',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'addInASet:',			#protocol : #adding,			#sourceCode : 'addInASet: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t].\r\t self add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:23:55.806734+02:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'addInASet:',			#protocol : #adding,			#sourceCode : 'addInASet: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t].\r\t self add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:23',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'addInASet:',			#protocol : #adding,			#sourceCode : 'addInASet: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t].\r\t super add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:24:00.659692+02:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t].\r\t super add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:24',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:24:04.428507+02:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'addInASet:',			#protocol : #adding,			#sourceCode : 'addInASet: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t].\r\t super add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:23',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:25:01.21622+02:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we don\'t want it twice. (it\'s a set!)"\r\t\t].\r\t super add: anObject.\r\t^self.',			#stamp : 'pm 10/7/2018 12:24',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: anObject \r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^self]"Object\'s already in, we\'re done"\r\t\t].\r\t super add: anObject."we let LinkedList add the object"\r\t^self.',			#stamp : 'pm 10/7/2018 12:25',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T12:29:51.398396+02:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'LinkedList',				#traitCompositionSource : '{}',				#definitionSource : 'LinkedList subclass: #MinimalOrderedSet\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #MinimalOrderedSet,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MinimalOrderedSet class\r\tinstanceVariableNames: \'\''				},				#name : #'MinimalOrderedSet class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MinimalOrderedSet,					#isMetaSide : false				},				#parent : @7,				#content : 'I\'m a ordered set, using a LinkedList. \r\rI\'m a linked list which only override the method \'add\' so i can be considered as a set.\r\rcf LinkedList.\r\rPublic API and Key Messages\r\r- add: anObject (add an object IF it\'s not in the set)\r- To create instances , cf LinkedList\r\rp:=MinimalOrderSet new.\rp add: 1 >> "p contains { 1 }\r p add : 1 >> "p contains { 1 }\r',				#stamp : 'pm 10/7/2018 12:29'			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I\'m a ordered set, using a LinkedList. \r\rI\'m a linked list which only override the method \'add\' so i can be considered as a set.\r\rcf LinkedList.\r\rPublic API and Key Messages\r\r- add: anObject (add an object IF it\'s not in the set)\r- To create instances , cf LinkedList\r\rp:=MinimalOrderSet new.\rp add: 1 >> "p contains { 1 }\r p add : 1 >> "p contains { 1 }\r',		#newStamp : 'pm 10/7/2018 12:29'	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T14:18:46.973586+02:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self left Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the forall in the formula\r\t"',			#stamp : 'pm 10/7/2018 12:01',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 14:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T14:59:13.854289+02:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t|t|\r\t\taMap add: (Association key: var value: \r\t\t(setOfLinkedVar isEmpty)\r\t\tifTrue:[t:=Const_Term new. t.]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse:[t:=Func_Term new:setOfLinkedVar]"then it\'s a skolem function"\r\t).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 14:59',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:02:20.230153+02:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t|t|\r\t\taMap add: (Association key: var value: \r\t\t(setOfLinkedVar isEmpty)\r\t\tifTrue:[t:=Const_Term new. t.]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse:[t:=Func_Term new:setOfLinkedVar]"then it\'s a skolem function"\r\t).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 14:59',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t|t|\r\t(setOfLinkedVar isEmpty)\r\tifTrue:[t:=Const_Term new.]"then it\'s a generated constant, same as an Exists"\r\tifFalse:[t:=Func_Term new:setOfLinkedVar]."then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 15:02',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:03:11.123404+02:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #'as yet unclassified',			#sourceCode : 'initialize: setOfLinkedVar\r\t',			#stamp : 'pm 10/7/2018 15:03',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:03:11.303167+02:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #'as yet unclassified',			#sourceCode : 'initialize: setOfLinkedVar\r\t',			#stamp : 'pm 10/7/2018 15:03',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: setOfLinkedVar\r\t',			#stamp : 'pm 10/7/2018 15:03',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:05:51.267583+02:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: setOfLinkedVar\r\t',			#stamp : 'pm 10/7/2018 15:03',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: setOfLinkedVar\r\tterms:=LinkedList new.\r\tsetOfLinkedVar  do: [ :each | terms add:each.].',			#stamp : 'pm 10/7/2018 15:05',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:06:40.874431+02:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'as yet unclassified',			#sourceCode : 'new: setOfLinkedVar\r\t^self basicNew initialize.',			#stamp : 'pm 10/7/2018 15:06',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:06:41.082917+02:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'as yet unclassified',			#sourceCode : 'new: setOfLinkedVar\r\t^self basicNew initialize.',			#stamp : 'pm 10/7/2018 15:06',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: setOfLinkedVar\r\t^self basicNew initialize.',			#stamp : 'pm 10/7/2018 15:06',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:08:11.082837+02:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #'as yet unclassified',			#sourceCode : 'initialize: symbo\r\tsymb:=symbo.',			#stamp : 'pm 10/7/2018 15:08',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:08:11.246805+02:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #'as yet unclassified',			#sourceCode : 'initialize: symbo\r\tsymb:=symbo.',			#stamp : 'pm 10/7/2018 15:08',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: symbo\r\tsymb:=symbo.',			#stamp : 'pm 10/7/2018 15:08',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:08:51.061352+02:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Term class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'as yet unclassified',			#sourceCode : 'new: symbo\r\t^self basicNew initialize:symbo.\t',			#stamp : 'pm 10/7/2018 15:08',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:08:51.263814+02:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Term class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'as yet unclassified',			#sourceCode : 'new: symbo\r\t^self basicNew initialize:symbo.\t',			#stamp : 'pm 10/7/2018 15:08',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Term class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: symbo\r\t^self basicNew initialize:symbo.\t',			#stamp : 'pm 10/7/2018 15:08',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:09:41.247079+02:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:Variables:',			#protocol : #'instance creation',			#sourceCode : 'new: symbo Variables: setOfLinkedVar\r\t^self basicNew initialize:symbo Variables setOfLinkedVAr.',			#stamp : 'pm 10/7/2018 15:09',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:09:45.374676+02:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:Variables:',			#protocol : #'instance creation',			#sourceCode : 'new: symbo Variables: setOfLinkedVar\r\t^self basicNew initialize:symbo Variables setOfLinkedVAr.',			#stamp : 'pm 10/7/2018 15:09',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:Variables:',			#protocol : #'instance creation',			#sourceCode : 'new: symbo Variables: setOfLinkedVar\r\t^self basicNew initialize:symbo Variables setOfLinkedVar.',			#stamp : 'pm 10/7/2018 15:09',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:10:24.629029+02:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:Variables:',			#protocol : #'instance creation',			#sourceCode : 'new: symbo Variables: setOfLinkedVar\r\t^self basicNew initialize:symbo Variables setOfLinkedVar.',			#stamp : 'pm 10/7/2018 15:09',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:Variables:',			#protocol : #'instance creation',			#sourceCode : 'new: symbo Variables: setOfLinkedVar\r\t^self basicNew initialize:symbo Variables: setOfLinkedVar.',			#stamp : 'pm 10/7/2018 15:10',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:10:42.776535+02:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:Variables:',			#protocol : #initialization,			#sourceCode : 'initialize: symbo Variables: setOfLinkedVar\r\tterms:=LinkedList new.\r\tsetOfLinkedVar  do: [ :each | terms add:each.].',			#stamp : 'pm 10/7/2018 15:10',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:10:50.738483+02:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: setOfLinkedVar\r\tterms:=LinkedList new.\r\tsetOfLinkedVar  do: [ :each | terms add:each.].',			#stamp : 'pm 10/7/2018 15:05',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:11:16.677955+02:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Func_Term class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: setOfLinkedVar\r\t^self basicNew initialize.',			#stamp : 'pm 10/7/2018 15:06',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:11:36.791408+02:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t|t|\r\t(setOfLinkedVar isEmpty)\r\tifTrue:[t:=Const_Term new.]"then it\'s a generated constant, same as an Exists"\r\tifFalse:[t:=Func_Term new:setOfLinkedVar]."then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 15:02',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t|t|\r\t(setOfLinkedVar isEmpty)\r\tifTrue:[t:=Const_Term new.]"then it\'s a generated constant, same as an Exists"\r\tifFalse:[t:=Func_Term new:\'f\' Variables:setOfLinkedVar]."then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 15:11',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:12:27.327854+02:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:Variables:',			#protocol : #initialization,			#sourceCode : 'initialize: symbo Variables: setOfLinkedVar\r\tterms:=LinkedList new.\r\tsetOfLinkedVar  do: [ :each | terms add:each.].',			#stamp : 'pm 10/7/2018 15:10',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Func_Term,				#isMetaSide : false			},			#name : #'initialize:Variables:',			#protocol : #initialization,			#sourceCode : 'initialize: symbo Variables: setOfLinkedVar\r\tsuper initialize:symbo.\r\tterms:=LinkedList new.\r\tsetOfLinkedVar  do: [ :each | terms add:each.].',			#stamp : 'pm 10/7/2018 15:12',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:16:31.472237+02:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [ ]	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ],		#time : DateAndTime [ '2018-10-07T15:16:31.538008+02:00' ],		#trigger : @3	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t|t|\r\t(setOfLinkedVar isEmpty)\r\tifTrue:[t:=Const_Term new.]"then it\'s a generated constant, same as an Exists"\r\tifFalse:[t:=Func_Term new:\'f\' Variables:setOfLinkedVar]."then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 15:11',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]\r\t\tifFalse: [ Func_Term new: \'f\' Variables: setOfLinkedVar ].\t"then it\'s a generated constant, same as an Exists"\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 15:16',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:18:00.065927+02:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]\r\t\tifFalse: [ Func_Term new: \'f\' Variables: setOfLinkedVar ].\t"then it\'s a generated constant, same as an Exists"\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 15:16',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ Func_Term new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:18:06.077497+02:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifier in the formula"',			#stamp : 'pm 10/7/2018 14:18',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:18:17.747852+02:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:18:17.952742+02:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:18',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T15:19:09.56403+02:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:19',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T16:05:52.720681+02:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:19',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ Func_Term new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 16:05',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T16:10:23.513784+02:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:18',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ Func_Term new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 16:10',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T16:10:57.41237+02:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ Func_Term new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 16:05',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 16:10',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T16:49:58.750056+02:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#Free_Term ))'	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ],		#time : DateAndTime [ '2018-10-07T16:49:59.359351+02:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #Free_Term\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #_resolution_1erOrdre'			},			#name : #Free_Term,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Free_Term class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteFree_Term class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteFree_Term,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:08:40.594259+02:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 17:08',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:08:40.761283+02:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 17:08',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 17:08',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:10:18.972599+02:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar add: (self var getSymb).\r\t^"(self class) new: ("self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap ")".\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 17:08',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tself updateTerms: setOfLinkedVar CorrespondingVAlue: aMap.',			#stamp : 'pm 10/7/2018 17:10',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:11:56.857912+02:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:CorrespondingVAlue:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: setOfLinkedVar CorrespondingVAlue: aMap\r\t',			#stamp : 'pm 10/7/2018 17:11',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:12:03.20395+02:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\tself updateTerms: setOfLinkedVar CorrespondingVAlue: aMap.',			#stamp : 'pm 10/7/2018 17:12',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:12:42.041093+02:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Atome',				#traitCompositionSource : '{}',				#definitionSource : 'Atome subclass: #Predicate\r\tinstanceVariableNames: \'symb vars\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Predicate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Predicate,						#isMetaSide : false					},					#name : #symb,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Predicate,						#isMetaSide : false					},					#name : #vars,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Predicate class\r\tinstanceVariableNames: \'\''				},				#name : #'Predicate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Predicate,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Atome',				#traitCompositionSource : '{}',				#definitionSource : 'Atome subclass: #Predicate\r\tinstanceVariableNames: \'symb terms\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #Predicate,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Predicate,						#isMetaSide : false					},					#name : #symb,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Predicate,						#isMetaSide : false					},					#name : #terms,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Predicate class\r\tinstanceVariableNames: \'\''				},				#name : #'Predicate class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Predicate,					#isMetaSide : false				},				#parent : @25,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:12:47.058993+02:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #vars,			#protocol : #accessing,			#sourceCode : 'vars\r\t^vars',			#stamp : 'pm 10/5/2018 18:58',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:12:58.647787+02:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #terms,			#protocol : #Skoleminsation,			#sourceCode : 'terms\r\t^terms.',			#stamp : 'pm 10/7/2018 17:12',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:13:05.34681+02:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t|t|\r\tt:=(self getSymb),\'(\'.\r\tvars do: [:each| t:=t,each,\',\'. ].\r\tt:=t,\')\'.\r\t^t.',			#stamp : 'pm 10/5/2018 23:05',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #prettyPrint,			#protocol : #printing,			#sourceCode : 'prettyPrint\r\t|t|\r\tt:=(self getSymb),\'(\'.\r\tterms do: [:each| t:=t,each,\',\'. ].\r\tt:=t,\')\'.\r\t^t.',			#stamp : 'pm 10/7/2018 17:13',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:13:17.104348+02:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop comment for usage."\r\t^true',			#stamp : 'pm 10/5/2018 16:06',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'matchPatternWith:',			#protocol : #matching,			#sourceCode : 'matchPatternWith: prop\r\t"see Prop\'s comment for usage."\r\t^true',			#stamp : 'pm 10/7/2018 17:13',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:13:29.353047+02:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'isSameVar:',			#protocol : #testing,			#sourceCode : 'isSameVar: predicate\r\t"= defined on SequenceableCollection, LinkedList\'s superclass."\r\t^(self vars)=(predicate vars).',			#stamp : 'pm 10/5/2018 23:08',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'isSameVar:',			#protocol : #testing,			#sourceCode : 'isSameVar: predicate\r\t"= defined on SequenceableCollection, LinkedList\'s superclass."\r\t^(self terms)=(predicate terms).',			#stamp : 'pm 10/7/2018 17:13',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:13:50.98917+02:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'initialize:Variable:',			#protocol : #initialization,			#sourceCode : 'initialize: symbl Variable: aTerm\r\tsymb:=symbl.\r\tvars:=LinkedList new.\r\tvars add:aTerm.',			#stamp : 'pm 10/6/2018 19:32',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'initialize:Variable:',			#protocol : #initialization,			#sourceCode : 'initialize: symbl Variable: aTerm\r\tsymb:=symbl.\r\tterms:=LinkedList new.\r\tterms add:aTerm.',			#stamp : 'pm 10/7/2018 17:13',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:13:55.411665+02:00' ],		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'initialize:Variables:',			#protocol : #initialization,			#sourceCode : 'initialize: symbl Variables: aLinkedListOfTerm\r\tsymb:=symbl.\r\tvars:=aLinkedListOfTerm.',			#stamp : 'pm 10/6/2018 19:32',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'initialize:Variables:',			#protocol : #initialization,			#sourceCode : 'initialize: symbl Variables: aLinkedListOfTerm\r\tsymb:=symbl.\r\tterms:=aLinkedListOfTerm.',			#stamp : 'pm 10/7/2018 17:13',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:14:32.92285+02:00' ],		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:CorrespondingVAlue:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: setOfLinkedVar CorrespondingVAlue: aMap\r\t',			#stamp : 'pm 10/7/2018 17:11',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:CorrespondingVAlue:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: setOfLinkedVar CorrespondingVAlue: aMap\r\tterms',			#stamp : 'pm 10/7/2018 17:14',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:16:47.24375+02:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:CorrespondingVAlue:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: setOfLinkedVar CorrespondingVAlue: aMap\r\tterms',			#stamp : 'pm 10/7/2018 17:14',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:CorrespondingVAlue:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: setOfLinkedVar CorrespondingVAlue: aMap\r\t| res |\r\tterms do:[ :term | res := term WhatAmI. ].',			#stamp : 'pm 10/7/2018 17:16',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:18:11.647573+02:00' ],		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: CorrespondanceMap\r\t| res |\r\tterms do:[ :term | res := term  WhatAmI: CorrespondaceMap . ].',			#stamp : 'pm 10/7/2018 17:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:18:24.251511+02:00' ],		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: CorrespondanceMap\r\t| res |\r\tterms do:[ :term | res := term  WhatAmI: CorrespondaceMap . ].',			#stamp : 'pm 10/7/2018 17:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:18:34.47682+02:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tself updateTerms: setOfLinkedVar CorrespondingVAlue: aMap.',			#stamp : 'pm 10/7/2018 17:10',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tself updateTerms: aMap.',			#stamp : 'pm 10/7/2018 17:18',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:19:26.914714+02:00' ],		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: CorrespondanceTable\r\t| res |\r\tterms do:[ :term | res := term WhatAmI:CorrespondanceTable. ].',			#stamp : 'pm 10/7/2018 17:19',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:19:33.547829+02:00' ],		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:CorrespondingVAlue:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: setOfLinkedVar CorrespondingVAlue: aMap\r\t| res |\r\tterms do:[ :term | res := term WhatAmI. ].',			#stamp : 'pm 10/7/2018 17:16',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:20:38.403483+02:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:CorrespondanceTable',			#stamp : 'pm 10/7/2018 17:20',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:28:08.555916+02:00' ],		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\tself updateTerms: setOfLinkedVar CorrespondingVAlue: aMap.',			#stamp : 'pm 10/7/2018 17:12',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\tself updateTerms: setOfLinkedVar CorrespondingValue: aMap.',			#stamp : 'pm 10/7/2018 17:28',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:28:31.480744+02:00' ],		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tself updateTerms: aMap.',			#stamp : 'pm 10/7/2018 17:18',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\tself updateTerms: setOfLinkedVar CorrespondingValue: aMap.',			#stamp : 'pm 10/7/2018 17:28',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:40:32.058516+02:00' ],		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t',			#stamp : 'pm 10/7/2018 17:40',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:40:41.590185+02:00' ],		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: setOfLinkedVar CorrespondingValue: aMap\r\t| res |\r\tterms do:[ :term | res := term WhatAmI:setOfLinkedVar CorrespondingValue:aMap. ].',			#stamp : 'pm 10/7/2018 17:40',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:40:47.600501+02:00' ],		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Predicate,				#isMetaSide : false			},			#name : #'updateTerms:',			#protocol : #Skoleminsation,			#sourceCode : 'updateTerms: CorrespondanceTable\r\t| res |\r\tterms do:[ :term | res := term WhatAmI:CorrespondanceTable. ].',			#stamp : 'pm 10/7/2018 17:19',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:42:07.970252+02:00' ],		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t',			#stamp : 'pm 10/7/2018 17:40',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t(self getSymb)',			#stamp : 'pm 10/7/2018 17:42',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T17:43:47.085536+02:00' ],		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t(self getSymb)',			#stamp : 'pm 10/7/2018 17:42',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t',			#stamp : 'pm 10/7/2018 17:43',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:16:47.509045+02:00' ],		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'Contains:',			#protocol : #adding,			#sourceCode : 'Contains: anObject \r\t"search for the object"\r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^true]"Object\'s already in, we\'re done"\r\t\t].\r\t^false.',			#stamp : 'pm 10/7/2018 18:16',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:21:02.317011+02:00' ],		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'LinkedList',				#traitCompositionSource : '{}',				#definitionSource : 'LinkedList subclass: #MinimalOrderedSet\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #MinimalOrderedSet,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MinimalOrderedSet class\r\tinstanceVariableNames: \'\''				},				#name : #'MinimalOrderedSet class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MinimalOrderedSet,					#isMetaSide : false				},				#parent : @7,				#content : 'I\'m a ordered set, using a LinkedList. \r\rI\'m a linked list which only override the method \'add\' so i can be considered as a set.\r\rcf LinkedList.\r\rPublic API and Key Messages\r\r- add: anObject (add an object IF it\'s not in the set)\r- Contains: anObject (search for an element in the set\r- To create instances , cf LinkedList\r\rp:=MinimalOrderSet new.\rp add: 1 >> "p contains { 1 }\r p add : 1 >> "p contains { 1 }\r',				#stamp : 'pm 10/7/2018 18:21'			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		},		#oldComment : 'I\'m a ordered set, using a LinkedList. \r\rI\'m a linked list which only override the method \'add\' so i can be considered as a set.\r\rcf LinkedList.\r\rPublic API and Key Messages\r\r- add: anObject (add an object IF it\'s not in the set)\r- To create instances , cf LinkedList\r\rp:=MinimalOrderSet new.\rp add: 1 >> "p contains { 1 }\r p add : 1 >> "p contains { 1 }\r',		#newComment : 'I\'m a ordered set, using a LinkedList. \r\rI\'m a linked list which only override the method \'add\' so i can be considered as a set.\r\rcf LinkedList.\r\rPublic API and Key Messages\r\r- add: anObject (add an object IF it\'s not in the set)\r- Contains: anObject (search for an element in the set\r- To create instances , cf LinkedList\r\rp:=MinimalOrderSet new.\rp add: 1 >> "p contains { 1 }\r p add : 1 >> "p contains { 1 }\r',		#oldStamp : 'pm 10/7/2018 12:29',		#newStamp : 'pm 10/7/2018 18:21'	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:25:42.998+02:00' ],		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'Contains:',			#protocol : #adding,			#sourceCode : 'Contains: anObject \r\t"search for the object"\r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^true]"Object\'s already in, we\'re done"\r\t\t].\r\t^false.',			#stamp : 'pm 10/7/2018 18:16',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalOrderedSet,				#isMetaSide : false			},			#name : #'Contains:',			#protocol : #adding,			#sourceCode : 'Contains: anObject \r\t"search for the object"\r\tself do: [ :each | \r\t\t(each=anObject) \r\t\tifTrue:[^true]\r\t\t].\r\t^false.',			#stamp : 'pm 10/7/2018 18:25',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:26:11.787274+02:00' ],		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t',			#stamp : 'pm 10/7/2018 18:08',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar contains:(self getSymb).',			#stamp : 'pm 10/7/2018 18:26',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:26:20.889541+02:00' ],		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\tsetOfLinkedVar contains:(self getSymb).',			#stamp : 'pm 10/7/2018 18:26',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t(setOfLinkedVar contains:(self getSymb))\r\tifTrue:[].',			#stamp : 'pm 10/7/2018 18:26',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:40:32.565009+02:00' ],		#prior : OmReference [ '142' ],		#self : OmReference [ '143' ]	},	#content : EpRenameClassRefactoring {		#newName : #LinkedTerm,		#oldName : #Linked_Term	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '143' ],		#self : OmReference [ '144' ],		#time : DateAndTime [ '2018-10-07T18:40:32.5795+02:00' ],		#trigger : @3	},	#content : EpBehaviorNameChange {		#oldName : #Linked_Term,		#newName : #LinkedTerm,		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #LinkedTerm\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #LinkedTerm,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedTerm class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedTerm class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedTerm,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:43:11.329098+02:00' ],		#prior : OmReference [ '144' ],		#self : OmReference [ '145' ]	},	#content : EpRenameClassRefactoring {		#newName : #FuncTerm,		#oldName : #Func_Term	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '145' ],		#self : OmReference [ '146' ],		#time : DateAndTime [ '2018-10-07T18:43:11.350472+02:00' ],		#trigger : @3	},	#content : EpBehaviorNameChange {		#oldName : #Func_Term,		#newName : #FuncTerm,		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #FuncTerm\r\tinstanceVariableNames: \'terms\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #FuncTerm,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #FuncTerm,						#isMetaSide : false					},					#name : #terms,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'FuncTerm class\r\tinstanceVariableNames: \'\''				},				#name : #'FuncTerm class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #FuncTerm,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '146' ],		#self : OmReference [ '147' ],		#time : DateAndTime [ '2018-10-07T18:43:11.398678+02:00' ],		#trigger : OmReference [ '145' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ Func_Term new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 16:10',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ FuncTerm new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 18:43',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '147' ],		#self : OmReference [ '148' ],		#time : DateAndTime [ '2018-10-07T18:43:11.430075+02:00' ],		#trigger : OmReference [ '145' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ Func_Term new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 15:18',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ FuncTerm new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 18:43',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:44:34.909706+02:00' ],		#prior : OmReference [ '148' ],		#self : OmReference [ '149' ]	},	#content : EpRenameClassRefactoring {		#newName : #ConstTerm,		#oldName : #Const_Term	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '149' ],		#self : OmReference [ '150' ],		#time : DateAndTime [ '2018-10-07T18:44:34.933527+02:00' ],		#trigger : @3	},	#content : EpBehaviorNameChange {		#oldName : #Const_Term,		#newName : #ConstTerm,		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Term',				#traitCompositionSource : '{}',				#definitionSource : 'Term subclass: #ConstTerm\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'_resolution_1erOrdre\''			},			#name : #ConstTerm,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ConstTerm class\r\tinstanceVariableNames: \'factoryNum\''				},				#name : #'ConstTerm class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'ConstTerm class',							#isMetaSide : true						},						#name : #factoryNum,						#parent : @12					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ConstTerm,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #_resolution_1erOrdre,			#package : #_resolution_1erOrdre,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '150' ],		#self : OmReference [ '151' ],		#time : DateAndTime [ '2018-10-07T18:44:35.00062+02:00' ],		#trigger : OmReference [ '149' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ FuncTerm new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 18:43',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Exists,				#isMetaSide : false			},			#name : #'Skolemnise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Skolemnise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ ConstTerm new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ FuncTerm new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Skolemnise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 18:44',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '151' ],		#self : OmReference [ '152' ],		#time : DateAndTime [ '2018-10-07T18:44:35.035636+02:00' ],		#trigger : OmReference [ '149' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ Const_Term new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ FuncTerm new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 18:43',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ForAll,				#isMetaSide : false			},			#name : #'Herbrandise:CorrespondingValue:',			#protocol : #Skoleminsation,			#sourceCode : 'Herbrandise: setOfLinkedVar CorrespondingValue: aMap\r\t| t |\r\tt := setOfLinkedVar isEmpty\r\t\tifTrue: [ ConstTerm new ]"then it\'s a generated constant, same as an Exists"\r\t\tifFalse: [ FuncTerm new: \'f\' Variables: setOfLinkedVar ].\t\t"then it\'s a skolem function"\r\taMap add: (Association key: var value: t).\r\t^ self operand Herbrandise: setOfLinkedVar CorrespondingValue: aMap\t"(self class) new: ("\t")"\r\t"We don\'t keep the Quantifiers in the formula"',			#stamp : 'pm 10/7/2018 18:44',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:45:01.515226+02:00' ],		#prior : OmReference [ '152' ],		#self : OmReference [ '153' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t(setOfLinkedVar contains:(self getSymb))\r\tifTrue:[].',			#stamp : 'pm 10/7/2018 18:26',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t(setOfLinkedVar contains:(self getSymb))\r\tifTrue:[^LinkedTerm new:(self getSymb)].',			#stamp : 'pm 10/7/2018 18:45',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:51:42.268925+02:00' ],		#prior : OmReference [ '153' ],		#self : OmReference [ '154' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t(setOfLinkedVar contains:(self getSymb))\r\tifTrue:[^LinkedTerm new:(self getSymb)].',			#stamp : 'pm 10/7/2018 18:45',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t(setOfLinkedVar contains:(self getSymb))\r\tifTrue:[^LinkedTerm new:(self getSymb)]\r\tifFalse:[\r\t\t\r\t\t].',			#stamp : 'pm 10/7/2018 18:51',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T18:51:45.119855+02:00' ],		#prior : OmReference [ '154' ],		#self : OmReference [ '155' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:CorrespondanceTable',			#stamp : 'pm 10/7/2018 17:20',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T19:10:33.449448+02:00' ],		#prior : OmReference [ '155' ],		#self : OmReference [ '156' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t(setOfLinkedVar contains:(self getSymb))\r\tifTrue:[^LinkedTerm new:(self getSymb)]\r\tifFalse:[\r\t\t\r\t\t].',			#stamp : 'pm 10/7/2018 18:51',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Term,				#isMetaSide : false			},			#name : #'WhatAmI:CorrespondingValue:',			#protocol : #'as yet unclassified',			#sourceCode : 'WhatAmI:setOfLinkedVar CorrespondingValue: aMap\r\t| elem |\r\t(setOfLinkedVar contains:(self getSymb))\r\tifTrue:[^LinkedTerm new:(self getSymb)]\r\tifFalse:[\r\t\telem:=aMap at:(self getSymb)ifAbsent:[^nil].\r\t\t(elem isNil)\r\t\tifFalse:[^elem]\r\t\tifTrue:[^(ConstTerm new:(self getSymb))].\r\t\t].',			#stamp : 'pm 10/7/2018 19:10',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-07T19:40:10.713059+02:00' ],		#prior : OmReference [ '156' ],		#self : OmReference [ '157' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Prop,				#isMetaSide : false			},			#name : #StartSkolemnisation,			#protocol : #Skoleminsation,			#sourceCode : 'StartSkolemnisation\r\t| set aMap |\r\tset:=MinimalOrderedSet new.\r\taMap:=Dictionary new.\r\t^self Skolemnise: set CorrespondingValue: aMap',			#stamp : 'pm 10/7/2018 19:40',			#package : #_resolution_1erOrdre		}	}}