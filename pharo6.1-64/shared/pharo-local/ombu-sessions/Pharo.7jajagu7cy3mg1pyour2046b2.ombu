OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:29:48.57048+02:00' ],		#prior : OmReference [ 'Pharo.45m5efyyklvsh004tv53wcya8', '18' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isKindOf: Or) | (clausifiedProp isKindOf: Atome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isKindOf: Not)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isKindOf:Atome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isKindOf: And)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/9/2018 13:59',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isKindOf: Not)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isKindOf:Atome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isKindOf: And)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/24/2018 20:29',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:29:54.437144+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isKindOf: Not)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isKindOf:Atome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isKindOf: And)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/24/2018 20:29',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isKindOf:Atome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isKindOf: And)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/24/2018 20:29',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:30:03.659832+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isKindOf:Atome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isKindOf: And)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/24/2018 20:29',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isKindOf:Atome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isAnd)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/24/2018 20:30',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:30:11.600671+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isKindOf:Atome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isAnd)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/24/2018 20:30',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isAtome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isAnd)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/24/2018 20:30',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:30:25.204704+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isAtome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isAnd)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t].\r\t].',			#stamp : 'pm 10/24/2018 20:30',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isAtome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isAnd)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t\t\t].\r\t].',			#stamp : 'pm 10/24/2018 20:30',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:30:33.261347+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isAtome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isAnd)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t\t\t].\r\t].',			#stamp : 'pm 10/24/2018 20:30',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ClausalForm,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t((clausifiedProp  isOr) | (clausifiedProp isAtome))\r\t "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isNot)\r\t\tifTrue:[\r\t\t\t((clausifiedProp operand) isAtome)\r\t\t\tifTrue:[^self clauses add:(Clause new:clausifiedProp).]\r\t\t\tifFalse:[^Error new:\'a not isn\'\'t englobing an atome\'.].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isAnd)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\tifFalse:[\r\t\t\tError new: \'Tried to add a non clause object to a clausaleForm\'.].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/24/2018 20:30',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:35:05.09832+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'resolvante:with:',			#protocol : #'as yet unclassified',			#sourceCode : 'resolvante: clause1 with: clause2\r\t^self error:\'todo\'.',			#stamp : 'pm 10/24/2018 10:11',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'resolvante:with:',			#protocol : #'as yet unclassified',			#sourceCode : 'resolvante: clause1 with: clause2\r\r\r\t^self error:\'todo\'.',			#stamp : 'pm 10/24/2018 20:35',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:35:16.598012+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'factorisation:',			#protocol : #'as yet unclassified',			#sourceCode : 'factorisation: aClause\r\t',			#stamp : 'pm 10/24/2018 20:35',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:36:50.02586+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'factorisation:',			#protocol : #'as yet unclassified',			#sourceCode : 'factorisation: aClause\r\t',			#stamp : 'pm 10/24/2018 20:35',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'factorisation:',			#protocol : #'as yet unclassified',			#sourceCode : 'factorisation: aClause\r\t| i |\r\ti:=0.\r\t\r\t[ i<= aClause size. ]\r\twhileTrue:[\r\t\t].',			#stamp : 'pm 10/24/2018 20:36',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:36:53.215901+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'factorisation:',			#protocol : #'as yet unclassified',			#sourceCode : 'factorisation: aClause\r\t| i |\r\ti:=0.\r\t\r\t[ i<= aClause size. ]\r\twhileTrue:[\r\t\t].',			#stamp : 'pm 10/24/2018 20:36',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'factorisation:',			#protocol : #'as yet unclassified',			#sourceCode : 'factorisation: aClause\r\t| i |\r\ti:=0.\r\t\r\t[ i<= (aClause size). ]\r\twhileTrue:[\r\t\t].',			#stamp : 'pm 10/24/2018 20:36',			#package : #_resolution_1erOrdre		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-24T20:49:38.292337+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'factorisation:',			#protocol : #'as yet unclassified',			#sourceCode : 'factorisation: aClause\r\t| i |\r\ti:=0.\r\t\r\t[ i<= (aClause size). ]\r\twhileTrue:[\r\t\t].',			#stamp : 'pm 10/24/2018 20:36',			#package : #_resolution_1erOrdre		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Resolvante,				#isMetaSide : false			},			#name : #'factorisation:',			#protocol : #'as yet unclassified',			#sourceCode : 'factorisation: aClause\r\t| i j c1 c2 |\r\ti:=0.\r\t\r\t[ i<(aClause size). ]\r\twhileTrue:[\r\t\tc1:=aClause at:i.\r\t\tj:=i+1.\r\t\t[ j<=(aClause size) ]\r\t\twhileTrue:[\r\t\t\tc2:=aClause at:j.\r\r\t\t\tj:=j+1.\r\t\t\t].\r\t\ti:=i+1.\r\t\t].',			#stamp : 'pm 10/24/2018 20:49',			#package : #_resolution_1erOrdre		}	}}