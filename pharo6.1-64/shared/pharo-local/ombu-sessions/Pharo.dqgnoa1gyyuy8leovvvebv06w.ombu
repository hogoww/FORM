OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:03:17.885591+02:00' ],		#prior : OmReference [ 'Pharo.qhuvje1l0ae79mszaddfu8k9', '18' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize\r\tatomes:=LinkedList new.',			#stamp : 'pm 10/2/2018 17:03',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:06:49.696295+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Clause class',				#isMetaSide : true			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new\r\t^self basicNew initialize.',			#stamp : 'pm 10/2/2018 17:06',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:06:49.844768+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Clause class',				#isMetaSide : true			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new\r\t^self basicNew initialize.',			#stamp : 'pm 10/2/2018 17:06',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Clause class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\t^self basicNew initialize.',			#stamp : 'pm 10/2/2018 17:06',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:24:56.807115+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'add:',			#protocol : #accessing,			#sourceCode : 'add: var\r\t(var isKindOf: Var)\r\t\tifTrue:[\r\t\t\tatomes add.\r\t\t\t^self."able chaining operation"\r\t\t\t]\r\t\tifFalse:[\r\t\t\t\r\t\t\t].',			#stamp : 'pm 10/2/2018 17:24',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:29:56.488644+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'add:',			#protocol : #accessing,			#sourceCode : 'add: var\r\t(var isKindOf: Var)\r\t\tifTrue:[\r\t\t\tatomes add.\r\t\t\t^self."able chaining operation"\r\t\t\t]\r\t\tifFalse:[\r\t\t\t\r\t\t\t].',			#stamp : 'pm 10/2/2018 17:24',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'add:',			#protocol : #accessing,			#sourceCode : 'add: var\r\t(var isKindOf: Var)\r\t\tifTrue:[\r\t\t\tatomes add.\r\t\t\t^self."able chaining operation"\r\t\t\t]\r\t\tifFalse:[\r\t\t\t\tTranscript show: \'wrong type\'.\r\t\t\t\t"should add an error."\r\t\t\t].',			#stamp : 'pm 10/2/2018 17:29',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:31:36.945436+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Clause class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: OrProp\r\t^self basicNew initialize:OrProp.',			#stamp : 'pm 10/2/2018 17:31',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:32:00.801523+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #accessing,			#sourceCode : 'initialize: OrVar\r\tatomes:=LinkedList new.',			#stamp : 'pm 10/2/2018 17:32',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:33:45.290321+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #accessing,			#sourceCode : 'initialize: OrVar\r\tatomes:=LinkedList new.',			#stamp : 'pm 10/2/2018 17:32',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #accessing,			#sourceCode : 'initialize: OrProp\r\tatomes:=LinkedList new.\r\tself addAll:OrProp.',			#stamp : 'pm 10/2/2018 17:33',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T17:58:10.445167+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Var)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Or)\r\t\tifTrue:[\r\t\t\tself addAll: (OrProp left).\r\t\t\tself addAll: (OrProp right).\r\t\t\t]\r\t\t\t].',			#stamp : 'pm 10/2/2018 17:58',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T19:08:07.35852+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Var)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Or)\r\t\tifTrue:[\r\t\t\tself addAll: (OrProp left).\r\t\t\tself addAll: (OrProp right).\r\t\t\t]\r\t\t\t].',			#stamp : 'pm 10/2/2018 17:58',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[self add:(NotVar new:(OrProp operand))]\r\t\t\t\tifFalse:[Transcript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:[\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/2/2018 19:08',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T19:08:40.647911+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[self add:(NotVar new:(OrProp operand))]\r\t\t\t\tifFalse:[Transcript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:[\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/2/2018 19:08',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Clause,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #accessing,			#sourceCode : 'addAll: OrProp\r\t(OrProp isKindOf: Atome)\r\tifTrue:[self add:OrProp.]\r\tifFalse:[\r\t\t((OrProp) isKindOf: Not)\r\t\tifTrue:[\r\t\t\t(OrProp operand isKindOf:Atome)\r\t\t\t\tifTrue:[self add:(NotVar new:(OrProp operand))]\r\t\t\t\tifFalse:["switch to Error new:"\r\t\t\t\t\tTranscript show: \'Error, shouldn\'\'t be any more not ( binaryOp )\'\r\t\t\t\t\t].\r\t\t\t]\r\t\tifFalse:[\r\t\t\t((OrProp) isKindOf: Or)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (OrProp left).\r\t\t\t\tself addAll: (OrProp right).\r\t\t\t\t]\r\t\t\tifFalse:["switch to Error new:"\r\t\t\t\tTranscript show:\'Error, shouldn\'\'t be any other kind of prop here.\'.\r\t\t\t\t].\r\t\t\t].\r\t\t].',			#stamp : 'pm 10/2/2018 19:08',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T19:25:54.515958+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\tclauses:=LinkedList new.',			#stamp : 'pm 10/2/2018 19:25',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T19:25:54.643706+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\tclauses:=LinkedList new.',			#stamp : 'pm 10/2/2018 19:25',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tclauses:=LinkedList new.',			#stamp : 'pm 10/2/2018 19:25',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T19:49:03.930431+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tclauses:=LinkedList new.',			#stamp : 'pm 10/2/2018 19:25',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tclauses:=LinkedList new.\r\t',			#stamp : 'pm 10/2/2018 19:49',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T19:52:34.116081+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: ClausifiedFormula\r\tclauses:=LinkedList new.\r\tself addAll: ClausifiedFormula.',			#stamp : 'pm 10/2/2018 19:52',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T20:10:55.280489+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #'add:',			#protocol : #initialization,			#sourceCode : 'add: clause\r\t(clause isKindOf: Clause)\r\tifTrue: [ self clauses add: clause ]\r\tifFalse:[Transcript show: \'Tried to add a non clause object to a clausaleForm\'  ].',			#stamp : 'pm 10/2/2018 20:10',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T21:17:17.500159+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r"\t(clausifiedProp isKindOf: Atome)"\r\t \r\t(clausifiedProp  isKindOf: Or) "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isKindOf: And)\r\t\tifTrue:[\r\t\t\tself addAll: (clausifiedProp left).\r\t\t\tself addAll: (clausifiedProp right).\r\t\t\t]\r\t\tifFalse:[\r\t\tTranscript show: \'Tried to add a non clause object to a clausaleForm\'  ].\r\t].',			#stamp : 'pm 10/2/2018 21:17',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T21:24:05.850045+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r"\t(clausifiedProp isKindOf: Atome)"\r\t \r\t(clausifiedProp  isKindOf: Or) "If i\'m in a or, there\'s only or(s) under him."\r\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\tifFalse:[\r\t\t(clausifiedProp isKindOf: And)\r\t\tifTrue:[\r\t\t\tself addAll: (clausifiedProp left).\r\t\t\tself addAll: (clausifiedProp right).\r\t\t\t]\r\t\tifFalse:[\r\t\tTranscript show: \'Tried to add a non clause object to a clausaleForm\'  ].\r\t].',			#stamp : 'pm 10/2/2018 21:17',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t(clausifiedProp isKindOf: Atome)\r\tifTrue:[]\r\tifFalse End of statement list encountered ->[\t \r\t\t(clausifiedProp  isKindOf: Or) "If i\'m in a or, there\'s only or(s) under him."\r\t\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isKindOf: And)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\t\tifFalse:[\r\t\t\tTranscript show: \'Tried to add a non clause object to a clausaleForm\'  ].\r\t\t].\r\t].',			#stamp : 'pm 10/2/2018 21:24',			#package : #_Specification		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-10-02T21:34:18.953501+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t(clausifiedProp isKindOf: Atome)\r\tifTrue:[]\r\tifFalse End of statement list encountered ->[\t \r\t\t(clausifiedProp  isKindOf: Or) "If i\'m in a or, there\'s only or(s) under him."\r\t\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isKindOf: And)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\t\tifFalse:[\r\t\t\tTranscript show: \'Tried to add a non clause object to a clausaleForm\'  ].\r\t\t].\r\t].',			#stamp : 'pm 10/2/2018 21:24',			#package : #_Specification		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FormeClausale,				#isMetaSide : false			},			#name : #'addAll:',			#protocol : #initialization,			#sourceCode : 'addAll: clausifiedProp\r\t\t(clausifiedProp  isKindOf: Or) | (clausifiedProp isKindOf: Atome) "If i\'m in a or, there\'s only or(s) under him."\r\t\tifTrue:[self clauses add: (Clause new:clausifiedProp)]\r\t\tifFalse:[\r\t\t\t(clausifiedProp isKindOf: And)\r\t\t\tifTrue:[\r\t\t\t\tself addAll: (clausifiedProp left).\r\t\t\t\tself addAll: (clausifiedProp right).\r\t\t\t\t]\r\t\t\tifFalse:[\r\t\t\tTranscript show: \'Tried to add a non clause object to a clausaleForm\'  ].\r\t\t].',			#stamp : 'pm 10/2/2018 21:34',			#package : #_Specification		}	}}